FEATURES:
Add support for mobile. (arrow keys, etc.).
Add percentage while game is loading (http://phaser.io/examples/v2/loader/load-events).
Allow player to cancel his choice in battle (e.g. when he chooses to attack, add a way to cancel this action and choose other action).
Upload GameMenu on github. Well documented example: https://github.com/bmarwane/phaser.healthbar
Add eye candy for the battle. Use camera flash before the battle, use sounds, etc.
Add GameOver logic.
Make Defend option in battle actually do something.
Update the README.md.
Fix the login form like: http://bootsnipp.com/tags/registration and add the first screen of the game like the conceptArt.png.
Consider adding Phaser.Camera.shake effect in the battle (on Attack and Spell).
Dealing with locations
Make color of GameMenu text configurable.
Add towns and stuff - https://github.com/thansber/final-fantasy-1-old/tree/master/js/data. This guy has almost everything. Or here - http://www.spriters-resource.com/submitter/Karrior+Cyredghymn/ (Not every place is ripped)

BUGS:
The project cannot be used completely offline, the tests cannot run offline because of Node.js bug.
Worldmap texture is too big so it does not load correctly on my Samsung Galaxy J5 with Chrome and default Browser.
The party is not exactly centered in the world.

REFACTORING:
All the things around Spells are kinda messy. Think of an appropriate approach for spells. Enable casting a spell animations.
Consider using EventEmmiter for battle start and battle end.
Consider using EventEmmiter when waiting the battle animations to finish.
Consider having a savegame files rather than storing the data in the DB.
All ASSETS from GameConstants should have suffixes like _JSON, _IMG.
Add tests for all stable classes.
Right now the inheritance of the Monster and Character from Phaser.Sprite is only made in order to deal with kill method. But I found there is a onKilled event for the spirte so consider not using inheritance.
Consider BattleUnits not to be a Phaser.Group wrapper but to extend Phaser.Group.
Function findUserWithProperty in /services/login/utils.js can be achieved using underscore.
