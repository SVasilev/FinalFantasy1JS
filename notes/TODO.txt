FEATURES:
Add support for mobile. (arrow keys, etc.).
Add percentage while game is loading (http://phaser.io/examples/v2/loader/load-events).
Allow player to cancel his choice in battle (e.g. when he chooses to attack, add a way to cancel this action and choose other action).
Upload GameMenu on github. Well documented example: https://github.com/bmarwane/phaser.healthbar
Add eye candy for the battle. Use camera flash before the battle, use sounds, etc.
Add GameOver logic.
Make Defend option in battle actually do something.
Update the README.md.
Fix the login form like: http://bootsnipp.com/tags/registration and add the first screen of the game like the conceptArt.png.
Consider adding Phaser.Camera.shake effect in the battle (on Attack and Spell).
Dealing with locations.
Add towns and stuff - https://github.com/thansber/final-fantasy-1-old/tree/master/js/data. This guy has almost everything. Or here - http://www.spriters-resource.com/submitter/Karrior+Cyredghymn/ (Not every place is ripped).
Should GameMenu have a "stretchToFit" configuration option, which should stretch the menu options text horizontal/vertical or both. Right now text is stretched only if it exceeds the menu bounds.

BUGS:
The project cannot be used completely offline, the tests cannot run offline because of Node.js bug.
Worldmap texture is too big so it does not load correctly on my Samsung Galaxy J5 with Chrome and default Browser.
The party is not exactly centered in the world.
Remove event.keyIdentifier occurrences since it is deprecated for a DOM event and does not work on IE. Possible solution https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode or just use the lastKey.keyCode (for which I opened a discussion https://github.com/photonstorm/phaser/issues/2542).

REFACTORING:
All the things around Spells are kinda messy. Think of an appropriate approach for spells. Enable casting a spell animations.
Consider using EventEmmiter for battle start and battle end.
Consider using EventEmmiter when waiting the battle animations to finish.
Consider having a savegame files rather than storing the data in the DB.
Add tests for all stable classes.
Right now the inheritance of the Monster and Character from Phaser.Sprite is only made in order to deal with kill method. But I found there is a onKilled event for the spirte so consider not using inheritance.
Consider BattleUnits not to be a Phaser.Group wrapper but to extend Phaser.Group.
Function findUserWithProperty in /services/login/utils.js can be achieved using underscore.
Make UnitActions a base class for Monster and Character.
Implement function which loads whole folder with configuration files or use filewalker module.
